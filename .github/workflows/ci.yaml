name: "CI"
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1
  CLICOLOR_FORCE: 1

permissions:
  actions: read
  contents: read

jobs:
  # Build for all relevant targets.
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: "x86_64-unknown-uefi"
            name: "UEFI/x86_64"
          - target: "aarch64-unknown-uefi"
            name: "UEFI/aarch64"

    name: "Build (${{ matrix.name }})"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up nightly rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: ${{ matrix.target }}

      - name: Enable cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.target }}"

      - name: "Build"
        run: cargo +nightly build --release --target=${{ matrix.target }}


  # Static analysis of the code.
  check:
    name: "Source code checks"
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up nightly rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          targets: x86_64-unknown-uefi
          components: clippy, rustfmt
          override: true

      - name: Format check
        run: cargo fmt --check --all

      - name: Check
        run: cargo +nightly check --target=x86_64-unknown-uefi

      - name: Clippy check
        if: matrix.rust-version == 'stable'
        run: cargo +nightly clippy --taret=x86_64-unknown-uefi
